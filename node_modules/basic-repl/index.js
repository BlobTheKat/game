let util=require("util");
module.exports=(p=">",e=_=>util.inspect(eval(_),false,5,true))=>{let f=async _=>(_ instanceof Promise ? await _ : _);let rl=require("readline").createInterface({input:process.stdin,output:process.stdout});
console.log=(function(...a){process.stdout.write("\x0D\x1b[2K"+a.map(a=>typeof a=="string"?a:util.inspect(a,false,5,true)).join(" ")+"\n\x1b[34m"+p+" \x1b[m")}).bind(console)
console.warn=(function(...a){process.stdout.write("\x0D\x1b[2K\x1b[33m"+a.map(a=>typeof a=="string"?a:util.inspect(a,false,5,true)).join(" ")+"\n\x1b[34m"+p+" \x1b[m")}).bind(console)
console.error=(function(...a){process.stdout.write("\x0D\x1b[2K\x1b[31m"+a.map(a=>typeof a=="string"?a:util.inspect(a,false,5,true)).join(" ")+"\n\x1b[34m"+p+" \x1b[m")}).bind(console)
console.in = console.input = console.ask = a => new Promise(r=>rl.question("\x1b[34m"+p+" \x1b[m",r));
(async()=>{while(1){try{console.log(await f(e(await console.ask())))}catch(e){console.log("\x1b[31m"+e+"\x1b[m")}}})()}